################################################################################
# This file will help you start using Cyca with docker.                        #
# You can copy/paste its content to portainer, or directly process it with     #
# docker-compose up                                                            #
################################################################################

# version
# Must be "2" if using portainer
# Default: "2"
version: "2"

services:
  # ----------------------------------------------------------------------------
  # ----| Database |------------------------------------------------------------
  # ----------------------------------------------------------------------------
  db:

    #
    # Uncomment the section corresponding to the database of your choice and
    # comment the others.
    #
    # Note: considering the amount of data stored by Cyca, SQLite is not
    # recommended.
    #
    # Note: use "db" in Cyca's env file as the database host
    #

    # ----| MariaDB |-----------------------------------------------------------
    # https://hub.docker.com/_/mariadb

    image: mariadb:10.5
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - "db-data:/var/lib/mysql"
    environment:
      # According to https://hub.docker.com/_/mariadb, MYSQL_ROOT_PASSWORD is
      # mandatory, so we define a default password...
      - "MYSQL_ROOT_PASSWORD=Camper7-Impish-Manhole"
      # ...which will be overriden by MariaDB itself
      - "MYSQL_RANDOM_ROOT_PASSWORD=yes"

      # Remind to edit the .env file to match these settings.
      # Also, for security concerns, remind that you can use docker secrets:
      # https://docs.docker.com/engine/swarm/secrets/
      - "MYSQL_DATABASE=cyca"
      - "MYSQL_USER=cyca"
      - "MYSQL_PASSWORD=Unsure4-Clambake-Squash"

    # ----| PostgreSQL |--------------------------------------------------------
    # https://hub.docker.com/_/postgres

    #image: postgres:13-alpine
    #restart: unless-stopped
    #networks:
    #  - internal
    #volumes:
    #  - "db-data:/var/lib/postgresql/data"
    #environment:
    #  - "POSTGRES_DB=cyca"
    #  - "POSTGRES_USER=cyca"
    #  - "POSTGRES_PASSWORD=Camper7-Impish-Manhole"

    # ----| SQLServer |---------------------------------------------------------
    # https://hub.docker.com/_/microsoft-mssql-server

    #image: mcr.microsoft.com/mssql/server
    #restart: unless-stopped
    #networks:
    #  - internal
    #environment:
    #  - "ACCEPT_EULA=Y"
    #  - "SA_PASSWORD=Camper7-Impish-Manhole"

  # ----------------------------------------------------------------------------
  # ----| Redis |---------------------------------------------------------------
  # ----------------------------------------------------------------------------
  redis:

    #
    # Redis could be used for queues, broadcasting, cache, etc.
    # It's enabled by default in Cyca's .env file, so if you do not want to use
    # it, comment the "redis:" line above and lines below, and update the .env
    # file accordingly.
    #
    # Note: the only case you would want to disable redis is if you use pusher
    # as broadcasting driver in Cyca. Otherwise, redis is required.
    #
    # Note: use "redis" in Cyca's env file as the redis host
    #

    image: redis:6.0-alpine
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - "redis-data:/data"

  # ----------------------------------------------------------------------------
  # ----| memcached |-----------------------------------------------------------
  # ----------------------------------------------------------------------------
  #memcached:

    #
    # Memcached could be used for session storage, cache, etc.
    # It's disabled by default. Feel free to enable it there by uncommenting the
    # "memcached:" line above and lines below, and modifying Cyca's .env file.
    #
    # Note: use "memcached" in Cyca's env file as the memcached host
    #

    #image: memcached:1.6-alpine
    #restart: unless-stopped
    #networks:
    #  - internal
    #volumes:
    #  - "memcached-data:/data"
    ## memcached will use 64MB of memory - adjust according to your resources if
    ## needed
    #command: "-m 64"

  # ----------------------------------------------------------------------------
  # ----| Application |---------------------------------------------------------
  # ----------------------------------------------------------------------------
  app:
    build:
      context: ./
      dockerfile: ./resources/docker/Dockerfile
    image: cyca
    restart: unless-stopped
    depends_on:
      - db
      - redis
      # Uncomment this line to use memcached
      #- memcached
    networks:
      - external
      - internal
    volumes:
      - ./:/app

  # ----------------------------------------------------------------------------
  # ----| Horizon: Queue manager |----------------------------------------------
  # ----------------------------------------------------------------------------
  horizon:
    image: cyca
    restart: unless-stopped
    command: "php artisan horizon"
    depends_on:
      - app
    networks:
      - external
      - internal
    volumes:
      - ./:/app

  # ----------------------------------------------------------------------------
  # ----| Scheduled tasks |-----------------------------------------------------
  # ----------------------------------------------------------------------------
  cron:
    image: cyca
    command: "cron -f"
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - external
      - internal
    volumes:
      - ./:/app

  # ----------------------------------------------------------------------------
  # ----| Websockets |----------------------------------------------------------
  # ----------------------------------------------------------------------------
  websockets:
    image: cyca
    command: "laravel-echo-server start"
    restart: unless-stopped
    depends_on:
      - horizon
    networks:
      - external
      - internal
    volumes:
      - ./:/app

  # ----------------------------------------------------------------------------
  # ----| Reverse-proxy |-------------------------------------------------------
  # ----------------------------------------------------------------------------
  proxy:

    #
    # This a simple reverse-proxy to ensure you can access Cyca on specified
    # port, including websockets.
    #
    # If you want HTTPs, which you should, you could either:
    #
    # - run your own reverse-proxy (such as traefik, apache, nginx, whatever)
    #   with Let's Encrypt or your own certificates
    #
    # - OR you could comment this block including the line above and make app:80
    #   your upstream server, but you will have to handle the websockets
    #   yourself
    #

    image: nginx:1.19
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./resources/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - app
      - websockets
    networks:
      - external
      - internal
    ports:
      - 8080:80

volumes:
  db-data:
  # Comment this line if you don't use redis
  redis-data:
  # Unomment this line if you use memcached
  #memcached-data:

networks:
  internal:
    internal: true
  external:
    driver: bridge
